1
00:00:01,070 --> 00:00:01,640
[Music]

2
00:00:01,640 --> 00:00:03,410
[Applause]

3
00:00:03,410 --> 00:00:05,250
what's up everybody

4
00:00:05,250 --> 00:00:08,010
my name is Magnus are you interested in

5
00:00:08,010 --> 00:00:09,120
getting started with machine learning

6
00:00:09,120 --> 00:00:11,550
intensive flow well in that case you've

7
00:00:11,550 --> 00:00:13,200
come to the right place because in this

8
00:00:13,200 --> 00:00:15,480
screencast that's exactly what we're

9
00:00:15,480 --> 00:00:17,820
going to do first of all let's get to

10
00:00:17,820 --> 00:00:20,100
the most important stuff locating the

11
00:00:20,100 --> 00:00:22,320
code we're going to use and to find it

12
00:00:22,320 --> 00:00:24,539
simply follow the instructions below in

13
00:00:24,539 --> 00:00:26,519
the description of this video I'll give

14
00:00:26,519 --> 00:00:30,929
you a couple of seconds to do that great

15
00:00:30,929 --> 00:00:32,759
let's now look it's what's gonna happen

16
00:00:32,759 --> 00:00:35,100
in this screencast we're going to create

17
00:00:35,100 --> 00:00:37,500
a deep neural network models to classify

18
00:00:37,500 --> 00:00:40,020
images of clothing and to do this we're

19
00:00:40,020 --> 00:00:42,090
going to use a data set called fashion m

20
00:00:42,090 --> 00:00:44,460
mist look in the description below to

21
00:00:44,460 --> 00:00:46,410
find out where this data set comes from

22
00:00:46,410 --> 00:00:50,489
fashion amnesty contains 28 by 28 pixel

23
00:00:50,489 --> 00:00:52,829
images of different clothing for example

24
00:00:52,829 --> 00:00:56,610
t-shirt and tops and sandals and ankle

25
00:00:56,610 --> 00:01:00,510
boots yay so you can say it's a really

26
00:01:00,510 --> 00:01:06,619
fashionable data set that's so corny

27
00:01:06,619 --> 00:01:09,450
alright here's the deal as I said we're

28
00:01:09,450 --> 00:01:11,700
going to train a deep neural network to

29
00:01:11,700 --> 00:01:14,159
classify these images and this is what

30
00:01:14,159 --> 00:01:16,080
the network will look like so we're

31
00:01:16,080 --> 00:01:19,080
taking 28 by 28 pixels as input which

32
00:01:19,080 --> 00:01:22,890
will be an array of 784 input values if

33
00:01:22,890 --> 00:01:25,530
we flatten it then we have our first

34
00:01:25,530 --> 00:01:27,119
hidden layer with a hundred and

35
00:01:27,119 --> 00:01:29,820
twenty-eight neurons so all the input

36
00:01:29,820 --> 00:01:31,950
pixel values will be sent to each of

37
00:01:31,950 --> 00:01:34,530
these neurons and finally we have the

38
00:01:34,530 --> 00:01:37,159
output layer which gives us ten values

39
00:01:37,159 --> 00:01:39,390
specifying the probability that the

40
00:01:39,390 --> 00:01:41,759
image is of a certain class for example

41
00:01:41,759 --> 00:01:45,630
if it's a t-shirt top a sandal or an

42
00:01:45,630 --> 00:01:48,409
ankle boot and since we're doing

43
00:01:48,409 --> 00:01:50,850
classification here these output values

44
00:01:50,850 --> 00:01:53,640
will be probabilities so if you sum all

45
00:01:53,640 --> 00:01:55,979
of these values up to ten values the

46
00:01:55,979 --> 00:01:58,890
result will be one this is because our

47
00:01:58,890 --> 00:02:00,930
neural network will always be a hundred

48
00:02:00,930 --> 00:02:03,149
percent certain that the image is one of

49
00:02:03,149 --> 00:02:05,520
these classes I mean that's the task

50
00:02:05,520 --> 00:02:07,320
we'll train the model to perform in the

51
00:02:07,320 --> 00:02:10,039
first place that's brilliant

52
00:02:10,039 --> 00:02:12,750
alright but that's enough of my face for

53
00:02:12,750 --> 00:02:13,410
now let's

54
00:02:13,410 --> 00:02:15,150
use the screen space for more important

55
00:02:15,150 --> 00:02:17,070
stuff that's right let's look at the

56
00:02:17,070 --> 00:02:21,540
code okay so by clicking on this button

57
00:02:21,540 --> 00:02:23,760
here I can actually execute the code

58
00:02:23,760 --> 00:02:25,770
directly from the browser through collab

59
00:02:25,770 --> 00:02:28,590
collab is a super cool product that

60
00:02:28,590 --> 00:02:30,330
gives you a virtual execution

61
00:02:30,330 --> 00:02:32,700
environment running in Google Cloud the

62
00:02:32,700 --> 00:02:34,560
only thing you need to be sure of is

63
00:02:34,560 --> 00:02:36,090
that you are logged in with your Google

64
00:02:36,090 --> 00:02:37,490
account

65
00:02:37,490 --> 00:02:40,560
next let's expand the licenses so this

66
00:02:40,560 --> 00:02:43,850
code is licensed under Apache and MIT

67
00:02:43,850 --> 00:02:46,590
now will actually start executing some

68
00:02:46,590 --> 00:02:49,170
code so the first step here is to import

69
00:02:49,170 --> 00:02:52,410
our libraries observe your output may

70
00:02:52,410 --> 00:02:54,210
show a different tensile version and

71
00:02:54,210 --> 00:02:55,740
that's totally okay

72
00:02:55,740 --> 00:02:58,230
alright so let's now load the fashion

73
00:02:58,230 --> 00:03:00,630
and this dataset we do this by calling

74
00:03:00,630 --> 00:03:02,550
this convenience function in Kara's and

75
00:03:02,550 --> 00:03:05,430
this will give us two lists one that has

76
00:03:05,430 --> 00:03:07,680
the images of labels we will use to

77
00:03:07,680 --> 00:03:10,380
train the model as you can see here the

78
00:03:10,380 --> 00:03:12,240
other list we will use to test how

79
00:03:12,240 --> 00:03:15,420
accurate our final model is so remember

80
00:03:15,420 --> 00:03:17,070
that fashion amnesty has ten classes

81
00:03:17,070 --> 00:03:19,170
here you can see all their numbers and

82
00:03:19,170 --> 00:03:20,550
their mapping to the class

83
00:03:20,550 --> 00:03:22,590
remember the favorite I previously

84
00:03:22,590 --> 00:03:25,350
mentioned the t-shirt on top sandal and

85
00:03:25,350 --> 00:03:29,040
the ankle boot here we create a list of

86
00:03:29,040 --> 00:03:31,380
these so given the numbers we can find a

87
00:03:31,380 --> 00:03:33,180
textual description of the class all

88
00:03:33,180 --> 00:03:34,170
right

89
00:03:34,170 --> 00:03:36,180
so let's explore our data set a bit more

90
00:03:36,180 --> 00:03:38,310
here you can see the shape of our

91
00:03:38,310 --> 00:03:40,980
training data set it has 60,000 images

92
00:03:40,980 --> 00:03:44,820
each which is 28 by 28 pixels you can

93
00:03:44,820 --> 00:03:46,920
also see that we have the same number of

94
00:03:46,920 --> 00:03:49,980
labels and that each label is a number

95
00:03:49,980 --> 00:03:53,670
between 0 and 9 and similarly for our

96
00:03:53,670 --> 00:03:56,220
test data set that contains 10,000

97
00:03:56,220 --> 00:03:58,739
images let's take a look at one of these

98
00:03:58,739 --> 00:04:01,470
images so here we're plotting the first

99
00:04:01,470 --> 00:04:05,489
image and look it's an ankle boot you

100
00:04:05,489 --> 00:04:07,590
can also see that each pixel has a

101
00:04:07,590 --> 00:04:11,489
grayscale value between 0 and 255 let's

102
00:04:11,489 --> 00:04:13,680
normalize these values so instead of

103
00:04:13,680 --> 00:04:15,720
having an integer value between 0 and

104
00:04:15,720 --> 00:04:19,260
255 we will have a float value between 0

105
00:04:19,260 --> 00:04:22,410
and 1 now let's print the first 25

106
00:04:22,410 --> 00:04:24,840
images and also print the corresponding

107
00:04:24,840 --> 00:04:26,910
names for each ah

108
00:04:26,910 --> 00:04:29,910
that's all looking great so many

109
00:04:29,910 --> 00:04:32,540
nice-looking images of fashion items and

110
00:04:32,540 --> 00:04:34,800
finally let's do some machine learning

111
00:04:34,800 --> 00:04:37,890
stuff first let's define the neural

112
00:04:37,890 --> 00:04:39,450
network which is going to be a

113
00:04:39,450 --> 00:04:41,820
sequential model this means that the

114
00:04:41,820 --> 00:04:43,770
layers will be processed in the order

115
00:04:43,770 --> 00:04:47,220
declared here as you can see we declare

116
00:04:47,220 --> 00:04:49,800
our first layer to be flat and type

117
00:04:49,800 --> 00:04:53,640
followed by two dense layers going back

118
00:04:53,640 --> 00:04:55,350
to our picture you can see how these

119
00:04:55,350 --> 00:04:57,140
statements match the different layers

120
00:04:57,140 --> 00:05:01,050
first we have a flattened 28 by 28 pixel

121
00:05:01,050 --> 00:05:05,610
image to an array having 784 values then

122
00:05:05,610 --> 00:05:08,880
we send each pixel value to all neurons

123
00:05:08,880 --> 00:05:11,100
in our first layer that's what a dense

124
00:05:11,100 --> 00:05:14,340
layer does we also applied a nonlinear

125
00:05:14,340 --> 00:05:17,970
function reel to the results and finally

126
00:05:17,970 --> 00:05:20,970
we calculate our 10 output classes using

127
00:05:20,970 --> 00:05:23,430
softmax to create the probability

128
00:05:23,430 --> 00:05:26,940
distribution that sums to 1 the only

129
00:05:26,940 --> 00:05:28,710
thing remaining is to specify the

130
00:05:28,710 --> 00:05:29,640
optimizer

131
00:05:29,640 --> 00:05:32,190
loss function and that we'd like to see

132
00:05:32,190 --> 00:05:34,590
the accuracy metrics during evaluation

133
00:05:34,590 --> 00:05:38,040
and that's it now we're ready to train

134
00:05:38,040 --> 00:05:40,590
the model and as you can see provide the

135
00:05:40,590 --> 00:05:43,170
training images and label as well as to

136
00:05:43,170 --> 00:05:47,490
use 5 epochs 1 epoch is a full iteration

137
00:05:47,490 --> 00:05:49,680
of the training data set so since we

138
00:05:49,680 --> 00:05:53,310
have 60,000 examples a total of 300

139
00:05:53,310 --> 00:05:55,410
thousand images will be used to train

140
00:05:55,410 --> 00:05:57,450
our model and that's it for training

141
00:05:57,450 --> 00:06:00,420
let's evaluate our model and see what

142
00:06:00,420 --> 00:06:03,300
the accuracy is on the test data set and

143
00:06:03,300 --> 00:06:05,760
as you can see we're actually doing

144
00:06:05,760 --> 00:06:08,430
pretty pretty good for a simple model

145
00:06:08,430 --> 00:06:11,580
like this now we can use our model to do

146
00:06:11,580 --> 00:06:14,610
predictions and here you can see the

147
00:06:14,610 --> 00:06:16,710
prediction for the first images is a

148
00:06:16,710 --> 00:06:19,560
probability distribution that indicates

149
00:06:19,560 --> 00:06:22,620
it's for class number 9 in other words

150
00:06:22,620 --> 00:06:26,880
the ankle boot when we also print the

151
00:06:26,880 --> 00:06:28,890
correct label for the first image you

152
00:06:28,890 --> 00:06:31,200
can see that our model made the correct

153
00:06:31,200 --> 00:06:34,080
prediction let's do some more

154
00:06:34,080 --> 00:06:36,090
predictions where we print both the

155
00:06:36,090 --> 00:06:38,820
predicted value as well as the correct

156
00:06:38,820 --> 00:06:40,090
tables

157
00:06:40,090 --> 00:06:42,220
with the images and as you can see our

158
00:06:42,220 --> 00:06:45,990
model is doing really really well

159
00:06:45,990 --> 00:06:49,150
finally let's grab the first image from

160
00:06:49,150 --> 00:06:51,940
the test data set as you can see it has

161
00:06:51,940 --> 00:06:55,630
resolution 28 by 28 then we add an

162
00:06:55,630 --> 00:06:58,180
initial dimension because the predict

163
00:06:58,180 --> 00:07:00,460
call requires a list of images to be

164
00:07:00,460 --> 00:07:03,639
passed to it we do the predict call and

165
00:07:03,639 --> 00:07:05,650
as you can see our model predicts its

166
00:07:05,650 --> 00:07:09,910
class line an ankle boot and finally we

167
00:07:09,910 --> 00:07:11,620
pick this highest index from our

168
00:07:11,620 --> 00:07:13,810
probability distribution list index

169
00:07:13,810 --> 00:07:18,490
number 9 and that's it I really hope you

170
00:07:18,490 --> 00:07:20,440
enjoyed this screencast be sure to

171
00:07:20,440 --> 00:07:22,389
subscribe to the tensorflow channel to

172
00:07:22,389 --> 00:07:24,370
follow the amazing world of machine

173
00:07:24,370 --> 00:07:26,830
learning and tensorflow but now it's

174
00:07:26,830 --> 00:07:28,750
your turn so go out there and create

175
00:07:28,750 --> 00:07:32,169
some great models and don't forget to

176
00:07:32,169 --> 00:07:34,600
tell us all about it

177
00:07:34,600 --> 00:07:35,210
[Music]

178
00:07:35,210 --> 00:07:37,600
[Applause]

179
00:07:37,600 --> 00:07:39,660
you

