1
00:00:00,000 --> 00:00:02,190
hi everybody I'm Laurence Moroney we're

2
00:00:02,190 --> 00:00:03,659
here at the tensorflow developers summit

3
00:00:03,659 --> 00:00:06,060
at the intensive flow cafe and it's my

4
00:00:06,060 --> 00:00:07,770
honor right now to meet with Pete worden

5
00:00:07,770 --> 00:00:10,679
and Pete is the tech lead for tensorflow

6
00:00:10,679 --> 00:00:12,780
on mobile which spends a whole lot of

7
00:00:12,780 --> 00:00:14,340
things people must be a lot of fun oh

8
00:00:14,340 --> 00:00:16,230
there's so much interesting stuff that

9
00:00:16,230 --> 00:00:18,480
people are doing so here now at the

10
00:00:18,480 --> 00:00:19,830
summit we've been showing a lot of

11
00:00:19,830 --> 00:00:22,410
mobile stuff including TF lights yes yes

12
00:00:22,410 --> 00:00:24,359
so what's new and exciting at TF light

13
00:00:24,359 --> 00:00:27,240
so over the last year you know tend to

14
00:00:27,240 --> 00:00:29,369
flow on mobile taking the whole of the

15
00:00:29,369 --> 00:00:31,650
Thames flow framework and fitting it

16
00:00:31,650 --> 00:00:34,200
down to feed our mobile has been really

17
00:00:34,200 --> 00:00:36,149
useful for a lot of people and we've

18
00:00:36,149 --> 00:00:38,250
done some seen some really interesting

19
00:00:38,250 --> 00:00:40,290
applications that people have built but

20
00:00:40,290 --> 00:00:42,360
what we've wanted to do is build

21
00:00:42,360 --> 00:00:44,399
something that's even smaller even

22
00:00:44,399 --> 00:00:46,469
faster and even easier to use

23
00:00:46,469 --> 00:00:49,590
so that's really what TF ly is you know

24
00:00:49,590 --> 00:00:52,739
its mission is to be that framework that

25
00:00:52,739 --> 00:00:54,600
people are looking for we've been seeing

26
00:00:54,600 --> 00:00:55,920
some really cool stuff done and over

27
00:00:55,920 --> 00:00:58,140
like the Kesava demo in the keynote yes

28
00:00:58,140 --> 00:01:00,899
yes I was we were just chatting

29
00:01:00,899 --> 00:01:03,030
off-camera earlier and it was like to me

30
00:01:03,030 --> 00:01:05,760
it blew my mind in that it's very hard

31
00:01:05,760 --> 00:01:08,250
to convey well when we all have great

32
00:01:08,250 --> 00:01:10,710
connectivity that why do you need it to

33
00:01:10,710 --> 00:01:13,710
be isolated on a mobile but that example

34
00:01:13,710 --> 00:01:17,580
I mean yeah how did that work so we

35
00:01:17,580 --> 00:01:19,619
actually have been working with plant

36
00:01:19,619 --> 00:01:21,689
village for I think up to a couple of

37
00:01:21,689 --> 00:01:24,119
years now and we've been working with

38
00:01:24,119 --> 00:01:25,650
them because they had such interesting

39
00:01:25,650 --> 00:01:28,799
problems like they were trying to get

40
00:01:28,799 --> 00:01:31,020
stuff into people's hands who didn't

41
00:01:31,020 --> 00:01:34,049
have data connections and also even if

42
00:01:34,049 --> 00:01:35,460
they had data connections they wanted

43
00:01:35,460 --> 00:01:37,619
answers fast so getting that

44
00:01:37,619 --> 00:01:40,049
interactivity and allowing people to

45
00:01:40,049 --> 00:01:42,090
actually move the camera around and

46
00:01:42,090 --> 00:01:44,009
focus it on the leaves and kind of get

47
00:01:44,009 --> 00:01:46,619
that instant feedback makes a massive

48
00:01:46,619 --> 00:01:48,329
difference for their application and

49
00:01:48,329 --> 00:01:49,829
we've seen that across a whole bunch of

50
00:01:49,829 --> 00:01:51,869
applications it's not just oh I don't

51
00:01:51,869 --> 00:01:53,579
have a data connection it's like oh I

52
00:01:53,579 --> 00:01:56,700
need to work with video or audio and I

53
00:01:56,700 --> 00:01:59,040
need that instant interactivity that you

54
00:01:59,040 --> 00:02:00,869
can only get by running on device that

55
00:02:00,869 --> 00:02:02,700
makes sense and it yet so you got that

56
00:02:02,700 --> 00:02:04,140
speed right because video might be a big

57
00:02:04,140 --> 00:02:07,180
upload to the cloud yeah

58
00:02:07,180 --> 00:02:09,040
that's actually pretty cool and then

59
00:02:09,040 --> 00:02:11,020
beyond like mobile like Android and iOS

60
00:02:11,020 --> 00:02:13,390
now you have TF like tensorflow like

61
00:02:13,390 --> 00:02:15,220
coming on Raspberry Pi yeah we sort of

62
00:02:15,220 --> 00:02:17,440
pulls them all of that yes and Andy has

63
00:02:17,440 --> 00:02:20,350
been doing amazing work with the vast

64
00:02:20,350 --> 00:02:23,200
blue pie and actually getting the speed

65
00:02:23,200 --> 00:02:24,610
that we've got on Android and iOS

66
00:02:24,610 --> 00:02:27,780
actually ported over to these wonderful

67
00:02:27,780 --> 00:02:32,350
sort of $25 devices and these things

68
00:02:32,350 --> 00:02:34,240
that you can put almost anywhere and do

69
00:02:34,240 --> 00:02:36,130
I think we were talking earlier about

70
00:02:36,130 --> 00:02:38,920
donkey car yeah yeah is this fantastic

71
00:02:38,920 --> 00:02:41,920
example of using temp to flow running on

72
00:02:41,920 --> 00:02:44,140
a Raspberry Pi to power a self-driving

73
00:02:44,140 --> 00:02:47,140
toy racing car and if you've seen the

74
00:02:47,140 --> 00:02:48,610
videos they're incredible how they

75
00:02:48,610 --> 00:02:51,580
differ I actually bought when I'm

76
00:02:51,580 --> 00:02:54,550
building it myself a convinced I don't

77
00:02:54,550 --> 00:02:55,840
know what it's gonna be like driving it

78
00:02:55,840 --> 00:02:57,550
at home but we'll see but an actual

79
00:02:57,550 --> 00:02:59,350
self-driving car even though it's a toy

80
00:02:59,350 --> 00:03:02,170
but about yay big but on a Raspberry Pi

81
00:03:02,170 --> 00:03:04,810
yes yeah I think about that think about

82
00:03:04,810 --> 00:03:06,640
the compute power of a Raspberry Pi and

83
00:03:06,640 --> 00:03:07,840
now you can build a self-driving car

84
00:03:07,840 --> 00:03:10,959
thanks to and the fact that this can be

85
00:03:10,959 --> 00:03:12,880
something that almost anybody can

86
00:03:12,880 --> 00:03:15,250
actually buy and build themselves now

87
00:03:15,250 --> 00:03:17,260
for just you know it's so much fun

88
00:03:17,260 --> 00:03:18,970
seeing this get into you know I have a

89
00:03:18,970 --> 00:03:20,950
lot of kids actually playing around with

90
00:03:20,950 --> 00:03:22,720
this stuff a lot of high school students

91
00:03:22,720 --> 00:03:25,300
as well building all of these crazy sort

92
00:03:25,300 --> 00:03:28,870
of you know trash sorters using

93
00:03:28,870 --> 00:03:32,019
raspberry pies you know all of these

94
00:03:32,019 --> 00:03:33,850
other like really really interesting

95
00:03:33,850 --> 00:03:35,590
projects you can only build if you have

96
00:03:35,590 --> 00:03:37,810
this cheap almost disposable computer

97
00:03:37,810 --> 00:03:40,150
that you can play with but when you can

98
00:03:40,150 --> 00:03:43,000
take a model that was typically only

99
00:03:43,000 --> 00:03:46,510
restricted to high ends the offensive

100
00:03:46,510 --> 00:03:49,090
super computers nowadays were tensorflow

101
00:03:49,090 --> 00:03:50,680
you can train that on your desktop

102
00:03:50,680 --> 00:03:52,239
machine might take a little longer we

103
00:03:52,239 --> 00:03:53,410
can train on your desktop machine you

104
00:03:53,410 --> 00:03:54,850
can flatten it and you can deploy it

105
00:03:54,850 --> 00:03:57,519
quickly to an Android or an iOS or now a

106
00:03:57,519 --> 00:03:58,959
Raspberry Pi so they take it

107
00:03:58,959 --> 00:04:00,640
and yeah one thing I would like to give

108
00:04:00,640 --> 00:04:02,290
a shout out to is actually tend to flow

109
00:04:02,290 --> 00:04:04,900
for poets the tutorial which doesn't

110
00:04:04,900 --> 00:04:07,359
require any coding yeah and we actually

111
00:04:07,359 --> 00:04:09,879
have the ability to very easily get that

112
00:04:09,879 --> 00:04:12,159
on to iOS Android or the Raspberry Pi

113
00:04:12,159 --> 00:04:15,099
okay so if you don't feel confident in

114
00:04:15,099 --> 00:04:17,229
coding at all you can still create your

115
00:04:17,229 --> 00:04:18,759
own image model you can just use

116
00:04:18,759 --> 00:04:21,100
tensorflow for poets go through the code

117
00:04:21,100 --> 00:04:24,220
lab and on a laptop with no GPU required

118
00:04:24,220 --> 00:04:25,720
in half an hour

119
00:04:25,720 --> 00:04:27,220
fingers crossed you should have your own

120
00:04:27,220 --> 00:04:28,930
model and if you're now familiar with

121
00:04:28,930 --> 00:04:30,430
out what that does is it takes the last

122
00:04:30,430 --> 00:04:32,860
layer and with it it uses write very

123
00:04:32,860 --> 00:04:34,900
much classification mobile net on it yes

124
00:04:34,900 --> 00:04:36,520
so it takes the last layer of that and

125
00:04:36,520 --> 00:04:38,320
in the poet's code lab you can replace

126
00:04:38,320 --> 00:04:39,910
the last layer of that so instead of

127
00:04:39,910 --> 00:04:41,530
classifying general images you train it

128
00:04:41,530 --> 00:04:43,270
on a bunch of flowers and it recognizes

129
00:04:43,270 --> 00:04:45,400
those flowers and like you said code

130
00:04:45,400 --> 00:04:47,500
lessly you can do it and we generally

131
00:04:47,500 --> 00:04:48,880
have it at conferences like Google i/o

132
00:04:48,880 --> 00:04:50,830
and I think it was the most popular code

133
00:04:50,830 --> 00:04:53,110
lab at i/o last year so it's super cool

134
00:04:53,110 --> 00:04:55,300
but back to Raspberry Pi for a second so

135
00:04:55,300 --> 00:04:56,620
like you know the demo that we showed

136
00:04:56,620 --> 00:04:58,750
earlier on was like tensorflow light

137
00:04:58,750 --> 00:05:00,789
running on a raspberry yes which was

138
00:05:00,789 --> 00:05:02,889
inference only but people will also want

139
00:05:02,889 --> 00:05:05,199
to be able to train on as something like

140
00:05:05,199 --> 00:05:07,449
a raspberry pi yeah how would that work

141
00:05:07,449 --> 00:05:10,150
so the vast we PI is this really

142
00:05:10,150 --> 00:05:13,000
interesting beast because it's half like

143
00:05:13,000 --> 00:05:16,090
a Linux desktop and it's half like a

144
00:05:16,090 --> 00:05:19,990
mobile phone so when all you want to do

145
00:05:19,990 --> 00:05:22,240
is run influenced run a model that's

146
00:05:22,240 --> 00:05:24,310
already been trained tensorflow light is

147
00:05:24,310 --> 00:05:25,330
great for that

148
00:05:25,330 --> 00:05:27,520
but if you actually want to use Python

149
00:05:27,520 --> 00:05:30,880
and you want to program and use the full

150
00:05:30,880 --> 00:05:32,620
programming environment of tensorflow

151
00:05:32,620 --> 00:05:34,630
and do training of models you can

152
00:05:34,630 --> 00:05:37,150
actually get binary pip installs and

153
00:05:37,150 --> 00:05:41,590
just do a pip install there is a URL

154
00:05:41,590 --> 00:05:43,960
that you can find if you unfortunately

155
00:05:43,960 --> 00:05:45,280
we don't have it up on the Ted's photo

156
00:05:45,280 --> 00:05:47,590
org website I'll put a link in that we

157
00:05:47,590 --> 00:05:50,229
will we will add a link that you can

158
00:05:50,229 --> 00:05:52,419
actually just do a pip install and get

159
00:05:52,419 --> 00:05:54,669
it on your arms lastly pie in minutes

160
00:05:54,669 --> 00:05:56,710
cuz so to be able to do that on a small

161
00:05:56,710 --> 00:05:58,000
embedded system because there may be

162
00:05:58,000 --> 00:05:59,650
scenarios like we're talking about

163
00:05:59,650 --> 00:06:00,699
earlier where you don't want to cut

164
00:06:00,699 --> 00:06:02,710
round-trip to the cloud yes and

165
00:06:02,710 --> 00:06:03,849
especially doing things like

166
00:06:03,849 --> 00:06:07,240
personalization or modifying according

167
00:06:07,240 --> 00:06:08,889
to data that you don't want to leave the

168
00:06:08,889 --> 00:06:10,900
device right that can be a really

169
00:06:10,900 --> 00:06:12,150
interesting appetite

170
00:06:12,150 --> 00:06:14,010
so if I'm a developer and I want to get

171
00:06:14,010 --> 00:06:15,720
started and enjoying all this magic

172
00:06:15,720 --> 00:06:16,980
other than the center proper poets

173
00:06:16,980 --> 00:06:21,120
codelab do you have any oh that's that's

174
00:06:21,120 --> 00:06:24,150
a really good question I would actually

175
00:06:24,150 --> 00:06:26,490
look through the examples that are

176
00:06:26,490 --> 00:06:29,850
intensive low and tend to flow light we

177
00:06:29,850 --> 00:06:31,620
actually have some demo applications

178
00:06:31,620 --> 00:06:33,420
that you should be able to get up and

179
00:06:33,420 --> 00:06:35,340
running pretty easily in Xcode or

180
00:06:35,340 --> 00:06:37,860
Android studio and really play around

181
00:06:37,860 --> 00:06:41,520
with them and start to get ideas and

182
00:06:41,520 --> 00:06:43,590
learn to modify the code that's already

183
00:06:43,590 --> 00:06:45,000
there it's so much easier to start with

184
00:06:45,000 --> 00:06:47,010
code that's already working yeah than

185
00:06:47,010 --> 00:06:48,150
trying to build something from scratch

186
00:06:48,150 --> 00:06:50,610
so I actually put the demo on my is my

187
00:06:50,610 --> 00:06:52,830
pixel and I put the Android demo on here

188
00:06:52,830 --> 00:06:54,360
and I'm having fun going around and

189
00:06:54,360 --> 00:06:57,090
classifying and the speed is actually

190
00:06:57,090 --> 00:06:58,740
really good because I can point it like

191
00:06:58,740 --> 00:07:00,720
for example at a mug and it's generally

192
00:07:00,720 --> 00:07:02,220
less than 100 milliseconds and it will

193
00:07:02,220 --> 00:07:04,500
classify itself yeah super and that's in

194
00:07:04,500 --> 00:07:04,890
Java

195
00:07:04,890 --> 00:07:06,240
that's not C first place and that's in

196
00:07:06,240 --> 00:07:09,540
Java and with the neural network API

197
00:07:09,540 --> 00:07:12,870
coming up in Android yeah Android P well

198
00:07:12,870 --> 00:07:14,340
we actually have a preview of it out

199
00:07:14,340 --> 00:07:16,800
already you should see even better

200
00:07:16,800 --> 00:07:18,540
performance especially using the

201
00:07:18,540 --> 00:07:22,230
Qualcomm HVX accelerator bits in your

202
00:07:22,230 --> 00:07:24,390
pixel so nice nice I'll look out further

203
00:07:24,390 --> 00:07:26,280
maybe I'll have to put a pee preview on

204
00:07:26,280 --> 00:07:30,870
here yeah so thank you so much Pete that

205
00:07:30,870 --> 00:07:32,940
it's been a blast I won't learn it fun

206
00:07:32,940 --> 00:07:35,340
sounds Lawrence and thanks everybody for

207
00:07:35,340 --> 00:07:37,290
watching I'm Laurence Moroney and I've

208
00:07:37,290 --> 00:07:39,180
had Pete worden on the show if you have

209
00:07:39,180 --> 00:07:40,740
any questions for me or if you have any

210
00:07:40,740 --> 00:07:42,540
questions for Pete please leave them in

211
00:07:42,540 --> 00:07:44,100
the comments below and don't forget to

212
00:07:44,100 --> 00:07:45,720
hit that subscribe button

213
00:07:45,720 --> 00:07:56,260
[Music]

214
00:07:56,260 --> 00:08:06,850
[Music]

