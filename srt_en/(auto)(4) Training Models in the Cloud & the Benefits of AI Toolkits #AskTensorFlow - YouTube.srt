1
00:00:00,000 --> 00:00:12,300
this is yours everybody and welcome to

2
00:00:12,300 --> 00:00:14,040
ask tensorflow this is the show where we

3
00:00:14,040 --> 00:00:15,870
answer your questions about tensorflow

4
00:00:15,870 --> 00:00:17,550
I'm Laurence Moroney a developer

5
00:00:17,550 --> 00:00:19,170
advocate on tensorflow and I have with

6
00:00:19,170 --> 00:00:19,650
me

7
00:00:19,650 --> 00:00:21,539
hi Magnus it's 10:00 I'm also developer

8
00:00:21,539 --> 00:00:23,070
advocate intensively we got lots of

9
00:00:23,070 --> 00:00:24,779
fascinating questions today so should we

10
00:00:24,779 --> 00:00:26,220
get right down to them yeah sounds good

11
00:00:26,220 --> 00:00:28,230
let's see the first one all right so

12
00:00:28,230 --> 00:00:30,599
this question is from Claudia in Seattle

13
00:00:30,599 --> 00:00:32,489
and the question is I keep hearing about

14
00:00:32,489 --> 00:00:34,890
90 bills having the newest greatest

15
00:00:34,890 --> 00:00:37,469
stuff should I use these and how do I

16
00:00:37,469 --> 00:00:39,450
use them I'd like to know that myself

17
00:00:39,450 --> 00:00:42,149
yeah well tensorflow is open-source and

18
00:00:42,149 --> 00:00:44,100
it's rapidly evolving and often you want

19
00:00:44,100 --> 00:00:45,780
the latest features for your research

20
00:00:45,780 --> 00:00:48,210
and development but you don't want to

21
00:00:48,210 --> 00:00:50,730
wait for a new release and given that

22
00:00:50,730 --> 00:00:52,289
tensorflow is open source you can always

23
00:00:52,289 --> 00:00:54,600
pull the latest source code and build it

24
00:00:54,600 --> 00:00:57,449
from for yourself of course however

25
00:00:57,449 --> 00:00:59,730
building the code can be slow and it can

26
00:00:59,730 --> 00:01:01,350
impact your productivity if you have to

27
00:01:01,350 --> 00:01:05,100
do it very often like every day or so so

28
00:01:05,100 --> 00:01:06,869
there are actually for convenience two

29
00:01:06,869 --> 00:01:08,729
bills that are being done for you on a

30
00:01:08,729 --> 00:01:12,119
daily or nightly hence the name basis

31
00:01:12,119 --> 00:01:14,100
one for tensorflow and one for tensor

32
00:01:14,100 --> 00:01:16,290
flow with GPU additions all you have to

33
00:01:16,290 --> 00:01:19,470
do to get them is to do pip install TF -

34
00:01:19,470 --> 00:01:21,810
nightly or pip install TF - Knightley -

35
00:01:21,810 --> 00:01:24,840
GPU on a clean system and you'll be good

36
00:01:24,840 --> 00:01:26,970
to go I personally like to have two

37
00:01:26,970 --> 00:01:29,549
machines one with the latest nightly

38
00:01:29,549 --> 00:01:31,619
build so I can try stuff out and one

39
00:01:31,619 --> 00:01:33,600
with the most stable release so I have

40
00:01:33,600 --> 00:01:35,250
something stable to work from all the

41
00:01:35,250 --> 00:01:36,840
way make sense I do exactly the same

42
00:01:36,840 --> 00:01:38,939
myself our next question comes from

43
00:01:38,939 --> 00:01:41,430
Joshi on Stack Overflow and the question

44
00:01:41,430 --> 00:01:43,619
is the instructions tell me to install

45
00:01:43,619 --> 00:01:46,259
tensorflow using Kipp but I get an error

46
00:01:46,259 --> 00:01:48,060
where it says there's no matching

47
00:01:48,060 --> 00:01:49,470
distribution I don't

48
00:01:49,470 --> 00:01:51,390
understand this can you help me well

49
00:01:51,390 --> 00:01:52,890
there's actually quite a few things in

50
00:01:52,890 --> 00:01:54,600
it's quite an obscure error message but

51
00:01:54,600 --> 00:01:56,940
for me I've seen this error message with

52
00:01:56,940 --> 00:01:58,590
a couple of things the first and most

53
00:01:58,590 --> 00:02:00,510
obvious or I've seen it is actually to

54
00:02:00,510 --> 00:02:02,100
take a look at your version of pip that

55
00:02:02,100 --> 00:02:04,650
you're using the tensorflow site says

56
00:02:04,650 --> 00:02:06,300
that you need to have at least version

57
00:02:06,300 --> 00:02:08,850
3.1 and this has knocked me out a few

58
00:02:08,850 --> 00:02:11,460
times - if you run pip with the - V

59
00:02:11,460 --> 00:02:13,350
switch you'll see a version if it's

60
00:02:13,350 --> 00:02:15,180
older than this then upgrade and it's

61
00:02:15,180 --> 00:02:17,010
always good to go to the tensorflow dog

62
00:02:17,010 --> 00:02:18,180
and just take a look at what the most

63
00:02:18,180 --> 00:02:20,550
recent recommendations are just in case

64
00:02:20,550 --> 00:02:22,050
this video is a little bit older by the

65
00:02:22,050 --> 00:02:24,209
time you're watching it and also be sure

66
00:02:24,209 --> 00:02:27,030
to use the version of pip that matches

67
00:02:27,030 --> 00:02:29,310
your version of python on some machines

68
00:02:29,310 --> 00:02:30,660
you could actually have two versions of

69
00:02:30,660 --> 00:02:34,110
Python 2.7 and 3x and then the PIP

70
00:02:34,110 --> 00:02:35,820
command might be mapped to the other

71
00:02:35,820 --> 00:02:38,190
version so I always like to say if I'm

72
00:02:38,190 --> 00:02:41,130
using 2.7 to use pip and if you're using

73
00:02:41,130 --> 00:02:45,660
3x to use pip 3 so in if you have 3x and

74
00:02:45,660 --> 00:02:47,040
that's the only one installed and the

75
00:02:47,040 --> 00:02:49,410
PIP command should default to pip 3 so

76
00:02:49,410 --> 00:02:50,610
by typing pip you're actually getting

77
00:02:50,610 --> 00:02:53,459
pip 3 but you really never know so if

78
00:02:53,459 --> 00:02:56,070
your pip or pip 3 installed tensorflow

79
00:02:56,070 --> 00:02:58,560
fails then the next thing you can do is

80
00:02:58,560 --> 00:03:01,500
to try the - - upgrade switch so it's

81
00:03:01,500 --> 00:03:03,450
pip installed - - upgrade tensorflow

82
00:03:03,450 --> 00:03:05,880
that type of thing and finally if you're

83
00:03:05,880 --> 00:03:08,250
still having problems then you can use

84
00:03:08,250 --> 00:03:10,320
the URL of the tensorflow binary as a

85
00:03:10,320 --> 00:03:12,540
switch to pip so you can find the latest

86
00:03:12,540 --> 00:03:14,370
URLs the latest binaries on the

87
00:03:14,370 --> 00:03:15,900
tensorflow dot-org site in the

88
00:03:15,900 --> 00:03:18,000
installing section i've put a link to it

89
00:03:18,000 --> 00:03:20,070
underneath so you just install and

90
00:03:20,070 --> 00:03:21,720
actually point directly at that binary

91
00:03:21,720 --> 00:03:23,459
and then hopefully you're not gonna have

92
00:03:23,459 --> 00:03:24,690
any more mismatches and you'll be good

93
00:03:24,690 --> 00:03:27,540
to go mm-hmm so good question I feel

94
00:03:27,540 --> 00:03:29,459
your pain so should we take another

95
00:03:29,459 --> 00:03:31,980
question yeah that sounds good so this

96
00:03:31,980 --> 00:03:35,690
question is from admin on Twitter at

97
00:03:35,690 --> 00:03:39,150
sandcastle kit that's a good Twitter so

98
00:03:39,150 --> 00:03:41,400
the question is anyone know a free

99
00:03:41,400 --> 00:03:43,950
website where I can train TF models on

100
00:03:43,950 --> 00:03:49,530
the cloud yeah there are a few things

101
00:03:49,530 --> 00:03:51,330
you can do if you want to learn about

102
00:03:51,330 --> 00:03:53,430
training models in the cloud my personal

103
00:03:53,430 --> 00:03:55,860
favorite is to use Google's collab you

104
00:03:55,860 --> 00:03:57,750
can see the link below from within

105
00:03:57,750 --> 00:04:00,360
Google Drive installed the collab add-on

106
00:04:00,360 --> 00:04:02,160
and this will give you a Jupiter

107
00:04:02,160 --> 00:04:02,940
notebook and

108
00:04:02,940 --> 00:04:04,860
on which you can run tensorflow code

109
00:04:04,860 --> 00:04:06,960
there's a lot of public datasets that

110
00:04:06,960 --> 00:04:08,820
you can train for I actually wrote up a

111
00:04:08,820 --> 00:04:10,230
tutorial that you can see in the links

112
00:04:10,230 --> 00:04:11,970
below and it's about how you can train a

113
00:04:11,970 --> 00:04:14,730
neural network on tensorflow for using

114
00:04:14,730 --> 00:04:16,560
CSV data in my case I use it for

115
00:04:16,560 --> 00:04:18,570
classifying breast cancer cells but if

116
00:04:18,570 --> 00:04:20,340
you've got CSV data you can use your own

117
00:04:20,340 --> 00:04:22,710
CSV data and easily modify the code and

118
00:04:22,710 --> 00:04:25,050
it should run happily in collab so be

119
00:04:25,050 --> 00:04:26,430
sure to check it out and there's

120
00:04:26,430 --> 00:04:28,110
something for Kaggle uses as well right

121
00:04:28,110 --> 00:04:30,300
exactly so if you're not a user of

122
00:04:30,300 --> 00:04:32,130
Kaggle you should definitely check Carol

123
00:04:32,130 --> 00:04:35,010
out cago provides a notebook environment

124
00:04:35,010 --> 00:04:37,320
- called kaggle kernels and in kaggle

125
00:04:37,320 --> 00:04:38,850
kernels you can write pretty much

126
00:04:38,850 --> 00:04:41,040
jupiter' code like you could do anywhere

127
00:04:41,040 --> 00:04:43,170
else so that's a great alternative as

128
00:04:43,170 --> 00:04:44,870
well if you want to do serverless

129
00:04:44,870 --> 00:04:47,250
packing one times of law yet these

130
00:04:47,250 --> 00:04:48,660
online notebooks are just becoming

131
00:04:48,660 --> 00:04:50,430
amazing I'm just really learning all

132
00:04:50,430 --> 00:04:51,960
this stuff myself for the first time and

133
00:04:51,960 --> 00:04:53,460
it's just being able to go to my browser

134
00:04:53,460 --> 00:04:55,350
and have a notebook and run code and all

135
00:04:55,350 --> 00:04:57,060
the dependencies are there and maybe

136
00:04:57,060 --> 00:04:58,800
even able to use things like GPUs it's

137
00:04:58,800 --> 00:05:00,630
like it's phenomenal yeah it's amazing I

138
00:05:00,630 --> 00:05:01,890
love it so should we take the next

139
00:05:01,890 --> 00:05:03,840
question yeah let's go on alright so the

140
00:05:03,840 --> 00:05:05,490
next question is from Rebecca in Hong

141
00:05:05,490 --> 00:05:08,010
Kong and it's Google has cloud AI

142
00:05:08,010 --> 00:05:10,170
toolkits as well as tensorflow

143
00:05:10,170 --> 00:05:12,660
which should I use well that's a really

144
00:05:12,660 --> 00:05:14,160
good question you're on the back end you

145
00:05:14,160 --> 00:05:15,900
know there's lots of great stuff in the

146
00:05:15,900 --> 00:05:17,970
Google cloud platform and where we have

147
00:05:17,970 --> 00:05:19,800
like cloud a eye that provides machine

148
00:05:19,800 --> 00:05:22,470
learning services pre train models and

149
00:05:22,470 --> 00:05:24,000
the ability for you to build your own

150
00:05:24,000 --> 00:05:26,280
tailored models but guess what that old

151
00:05:26,280 --> 00:05:27,810
uses tensorflow we're one big happy

152
00:05:27,810 --> 00:05:30,180
family and if you use cloud though you

153
00:05:30,180 --> 00:05:32,070
can also get access to lots of other

154
00:05:32,070 --> 00:05:34,080
great things like hardware that's

155
00:05:34,080 --> 00:05:36,060
optimized for machine learning you might

156
00:05:36,060 --> 00:05:38,100
have heard of GPUs tensorflow processing

157
00:05:38,100 --> 00:05:40,110
units which are processors that are

158
00:05:40,110 --> 00:05:41,760
geared for ML with tensorflow

159
00:05:41,760 --> 00:05:43,440
you can use these in the cloud with the

160
00:05:43,440 --> 00:05:45,510
Google cloud platform there's also lots

161
00:05:45,510 --> 00:05:47,669
of services for specific scenarios

162
00:05:47,669 --> 00:05:49,770
things such as cloud video intelligence

163
00:05:49,770 --> 00:05:51,870
makes videos searchable and discoverable

164
00:05:51,870 --> 00:05:54,630
or there's the cloud vision API that you

165
00:05:54,630 --> 00:05:56,669
can use to analyze the contents of your

166
00:05:56,669 --> 00:05:58,770
actual images it's really cool with some

167
00:05:58,770 --> 00:06:00,390
of the demos you see for that way you

168
00:06:00,390 --> 00:06:02,220
take a photo it upload you upload it and

169
00:06:02,220 --> 00:06:03,840
the cloud API tells you what's in that

170
00:06:03,840 --> 00:06:06,090
image there's also the cloud speech API

171
00:06:06,090 --> 00:06:07,919
which is great for converting audio to

172
00:06:07,919 --> 00:06:09,570
text and there's a whole lot more you've

173
00:06:09,570 --> 00:06:11,010
probably used Google Translate that's

174
00:06:11,010 --> 00:06:13,200
also built in all of this technology but

175
00:06:13,200 --> 00:06:14,610
if you want to get down to the nuts and

176
00:06:14,610 --> 00:06:16,150
bolts of machine language

177
00:06:16,150 --> 00:06:18,070
raining classifiers regressors and the

178
00:06:18,070 --> 00:06:20,260
like then tensorflow is the API that you

179
00:06:20,260 --> 00:06:22,300
can use to do it yourself the bottom

180
00:06:22,300 --> 00:06:23,980
line is that it's not an either/or nor

181
00:06:23,980 --> 00:06:25,990
you can actually use both but great

182
00:06:25,990 --> 00:06:27,520
question about there thank you so much

183
00:06:27,520 --> 00:06:30,040
well thanks everybody this has been a

184
00:06:30,040 --> 00:06:31,630
really fascinating show some lots of

185
00:06:31,630 --> 00:06:33,670
great questions in there and if you have

186
00:06:33,670 --> 00:06:35,380
any more questions for us remember

187
00:06:35,380 --> 00:06:37,270
please post them on social media with

188
00:06:37,270 --> 00:06:39,400
these last tensorflow hashtag and we'll

189
00:06:39,400 --> 00:06:40,630
be looking out to answer them in an

190
00:06:40,630 --> 00:06:42,550
episode coming very very soon thank you

191
00:06:42,550 --> 00:06:43,310
so much

192
00:06:43,310 --> 00:06:50,320
[Music]

193
00:06:50,320 --> 00:06:52,380
you

