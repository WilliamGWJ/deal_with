1
00:00:00,340 --> 00:00:03,440
[Music]

2
00:00:03,440 --> 00:00:06,089
welcome to tents Flo meets I'm Pete

3
00:00:06,089 --> 00:00:07,830
worden and today we're gonna be talking

4
00:00:07,830 --> 00:00:10,380
to marius erickson so I understand

5
00:00:10,380 --> 00:00:12,900
you're using tensorflow to help your

6
00:00:12,900 --> 00:00:15,780
daughter who's a type 1 diabetic maybe

7
00:00:15,780 --> 00:00:17,039
you could tell us a bit more about that

8
00:00:17,039 --> 00:00:19,199
sure yeah so it helps have a little bit

9
00:00:19,199 --> 00:00:21,359
of background and what's our treating

10
00:00:21,359 --> 00:00:25,650
type 1 diabetes entails so when you are

11
00:00:25,650 --> 00:00:27,300
a type 1 diabetic your pancreas is

12
00:00:27,300 --> 00:00:28,980
basically non functioning and not

13
00:00:28,980 --> 00:00:30,289
secreting insulin into your bloodstream

14
00:00:30,289 --> 00:00:32,910
which is required for yourselves to take

15
00:00:32,910 --> 00:00:35,340
up glucose because of this phenomenon we

16
00:00:35,340 --> 00:00:37,079
have basically be able to predict what

17
00:00:37,079 --> 00:00:39,989
glucose levels should be and then based

18
00:00:39,989 --> 00:00:42,450
on that prediction the liver sort of a

19
00:00:42,450 --> 00:00:44,100
correct amount of insulin or withhold

20
00:00:44,100 --> 00:00:47,550
insulin if we predict that blood glucose

21
00:00:47,550 --> 00:00:51,120
is going to go low right and so because

22
00:00:51,120 --> 00:00:54,390
of those those reasons we approach that

23
00:00:54,390 --> 00:00:57,140
I've taken is to employ machine learning

24
00:00:57,140 --> 00:01:00,329
actually in two ways so one is a model

25
00:01:00,329 --> 00:01:03,690
that uses data that's gathered on a

26
00:01:03,690 --> 00:01:06,479
continual basis every five minutes and

27
00:01:06,479 --> 00:01:08,580
predicts future blood glucose based on

28
00:01:08,580 --> 00:01:13,070
you know that passed and then secondly a

29
00:01:13,070 --> 00:01:15,540
different model or rather model that

30
00:01:15,540 --> 00:01:17,520
builds on the first model tries to

31
00:01:17,520 --> 00:01:19,170
figure out what is an optimal insulin

32
00:01:19,170 --> 00:01:22,880
delivery schedule that will effectively

33
00:01:22,880 --> 00:01:26,490
you know keep blood sugar within this

34
00:01:26,490 --> 00:01:28,650
sort of Goldilocks zone right and so

35
00:01:28,650 --> 00:01:30,390
that second model knows about the sort

36
00:01:30,390 --> 00:01:32,970
of pharmacodynamics of insulin and so on

37
00:01:32,970 --> 00:01:33,659
and so forth

38
00:01:33,659 --> 00:01:36,329
and actually use tensorflow for both of

39
00:01:36,329 --> 00:01:37,799
those right one of the really nice

40
00:01:37,799 --> 00:01:38,939
things about tensorflow is that it's

41
00:01:38,939 --> 00:01:40,170
very easy to compose these models

42
00:01:40,170 --> 00:01:41,880
together and that's exactly what how

43
00:01:41,880 --> 00:01:43,950
this works awesome do you want to it

44
00:01:43,950 --> 00:01:45,960
looks like you actually have pump dead

45
00:01:45,960 --> 00:01:50,909
so this is the pump or pump similar to

46
00:01:50,909 --> 00:01:53,610
what my daughter worse and this is just

47
00:01:53,610 --> 00:01:54,750
something you keep in your pocket or

48
00:01:54,750 --> 00:01:57,000
whatever and there so you see is a

49
00:01:57,000 --> 00:01:58,320
little too big that comes out of this

50
00:01:58,320 --> 00:02:01,979
and insulin reservoir in here the tubing

51
00:02:01,979 --> 00:02:03,869
connects to you know effectively a small

52
00:02:03,869 --> 00:02:06,930
needle that that's inserted into some

53
00:02:06,930 --> 00:02:08,069
fatty area of your body

54
00:02:08,069 --> 00:02:10,110
this pump in particular can be

55
00:02:10,110 --> 00:02:12,599
controlled remotely and so the first

56
00:02:12,599 --> 00:02:13,700
thing that had to do for this

57
00:02:13,700 --> 00:02:17,180
there's not machine learning so related

58
00:02:17,180 --> 00:02:19,819
is to effectively reverse reverse

59
00:02:19,819 --> 00:02:22,010
engineer that radio protocol so I can

60
00:02:22,010 --> 00:02:24,620
control it from a Raspberry Pi which is

61
00:02:24,620 --> 00:02:27,410
the second component and so this is a

62
00:02:27,410 --> 00:02:29,989
Raspberry Pi zero as we can see and this

63
00:02:29,989 --> 00:02:31,670
is sort of where all the magic happens

64
00:02:31,670 --> 00:02:34,790
and so the Raspberry Pi zero through a

65
00:02:34,790 --> 00:02:37,130
custom I some radio with custom firmware

66
00:02:37,130 --> 00:02:39,440
that knows how to communicate to the

67
00:02:39,440 --> 00:02:41,750
insulin pump can effectively instruct in

68
00:02:41,750 --> 00:02:43,489
some pump what to do deliver this much

69
00:02:43,489 --> 00:02:44,989
insulin or withholding stone or whatever

70
00:02:44,989 --> 00:02:50,080
the Raspberry Pi also uses ble to

71
00:02:50,080 --> 00:02:52,220
communicate with the phone and that

72
00:02:52,220 --> 00:02:54,730
serves two purposes one is to receive

73
00:02:54,730 --> 00:02:57,170
blood glucose values from this

74
00:02:57,170 --> 00:02:59,090
continuous glucose monitoring system

75
00:02:59,090 --> 00:03:01,400
that integrates with the phone and the

76
00:03:01,400 --> 00:03:04,579
second is to receive instructions from

77
00:03:04,579 --> 00:03:06,739
the phone as to for example when my

78
00:03:06,739 --> 00:03:08,510
daughter eats and so whenever she eats

79
00:03:08,510 --> 00:03:10,400
we have to enter all your we're eating

80
00:03:10,400 --> 00:03:12,590
this many grams of carbs so the model

81
00:03:12,590 --> 00:03:13,940
can take that into account right and

82
00:03:13,940 --> 00:03:15,319
without that it wouldn't be able to

83
00:03:15,319 --> 00:03:17,840
predict the future very well so what

84
00:03:17,840 --> 00:03:19,190
does your daughter think of this this is

85
00:03:19,190 --> 00:03:20,510
making a difference for her oh

86
00:03:20,510 --> 00:03:23,359
absolutely and so so there's there's two

87
00:03:23,359 --> 00:03:25,160
big ways in which it makes the

88
00:03:25,160 --> 00:03:28,010
difference I think so one is it just

89
00:03:28,010 --> 00:03:31,310
reduces the labor intensity of diabetes

90
00:03:31,310 --> 00:03:32,870
you know you still have to intervene on

91
00:03:32,870 --> 00:03:34,910
occasion there's still a lot of things

92
00:03:34,910 --> 00:03:37,970
to do but you can't beat a computer in

93
00:03:37,970 --> 00:03:41,180
terms of you know being able to do the

94
00:03:41,180 --> 00:03:43,100
same thing every five minutes over and

95
00:03:43,100 --> 00:03:44,750
over and over again right and so

96
00:03:44,750 --> 00:03:46,459
literally every five minutes the system

97
00:03:46,459 --> 00:03:48,470
adjusts insulin delivery based on the

98
00:03:48,470 --> 00:03:51,139
you know predicted what it predicts in

99
00:03:51,139 --> 00:03:55,840
the future the second big thing is that

100
00:03:55,840 --> 00:04:00,799
typically the way diabetes is treated is

101
00:04:00,799 --> 00:04:02,329
with something called basal and bolus

102
00:04:02,329 --> 00:04:04,760
therapy and what that means is that it's

103
00:04:04,760 --> 00:04:08,359
a it's a you know still fairly complex

104
00:04:08,359 --> 00:04:11,389
but far simplified version of what the

105
00:04:11,389 --> 00:04:16,160
model does and you have to sort of even

106
00:04:16,160 --> 00:04:18,769
with this therapy you have to every time

107
00:04:18,769 --> 00:04:20,840
you eat you know check what your blood

108
00:04:20,840 --> 00:04:24,229
glucose us computes you know using a few

109
00:04:24,229 --> 00:04:26,699
ratios how much insulin to liver

110
00:04:26,699 --> 00:04:28,439
and then do it and then check your blood

111
00:04:28,439 --> 00:04:29,759
sugar you know again a little bit later

112
00:04:29,759 --> 00:04:32,310
but again with with using machine

113
00:04:32,310 --> 00:04:33,719
learning techniques and and and other

114
00:04:33,719 --> 00:04:36,449
things we can do far far better we can

115
00:04:36,449 --> 00:04:39,599
understand much more deeply the the

116
00:04:39,599 --> 00:04:41,759
evolution of insulin in the blood we can

117
00:04:41,759 --> 00:04:43,889
predict the evolution of carbohydrate or

118
00:04:43,889 --> 00:04:45,270
parents in the blood and so on and so

119
00:04:45,270 --> 00:04:48,240
forth and the way this model works is

120
00:04:48,240 --> 00:04:49,800
that it you know it's obviously trained

121
00:04:49,800 --> 00:04:51,979
with a lot of historical data and so

122
00:04:51,979 --> 00:04:54,330
individual variants right it's also

123
00:04:54,330 --> 00:04:55,770
something that the model can pick up

124
00:04:55,770 --> 00:04:58,409
very readily right so as an example it's

125
00:04:58,409 --> 00:05:01,110
known that individuals respond slightly

126
00:05:01,110 --> 00:05:03,509
differently to to insulin right maybe

127
00:05:03,509 --> 00:05:06,509
the pharmacodynamics evolved in slightly

128
00:05:06,509 --> 00:05:08,849
different ways maybe they maybe it takes

129
00:05:08,849 --> 00:05:10,860
longer for the insulin to Claire right

130
00:05:10,860 --> 00:05:12,629
maybe the peak is stronger things like

131
00:05:12,629 --> 00:05:15,449
that with this model it actually learns

132
00:05:15,449 --> 00:05:17,370
what the pharmacodynamics are so you

133
00:05:17,370 --> 00:05:19,589
mentioned data as well how did you

134
00:05:19,589 --> 00:05:22,289
actually go about getting the training

135
00:05:22,289 --> 00:05:25,020
data that you needed to train and test

136
00:05:25,020 --> 00:05:26,969
these models right so after i

137
00:05:26,969 --> 00:05:29,610
reverse-engineered the the RF protocol

138
00:05:29,610 --> 00:05:33,120
of the pump i started basically first as

139
00:05:33,120 --> 00:05:35,159
observing and so every five minutes that

140
00:05:35,159 --> 00:05:37,289
effectively queries the pump and asks

141
00:05:37,289 --> 00:05:38,639
how much of it delivered in the last

142
00:05:38,639 --> 00:05:40,500
five minutes right but still doing

143
00:05:40,500 --> 00:05:42,259
manual therapy right so we're still

144
00:05:42,259 --> 00:05:45,659
administering insulin through the remote

145
00:05:45,659 --> 00:05:47,129
control but we were controlling it right

146
00:05:47,129 --> 00:05:49,259
and then all at the same time entering

147
00:05:49,259 --> 00:05:51,029
every time my daughter had a meal we

148
00:05:51,029 --> 00:05:52,800
were to enter our estimate of the number

149
00:05:52,800 --> 00:05:54,539
of carbs in that meal and our estimate

150
00:05:54,539 --> 00:05:56,129
of the grassy mechanics so those things

151
00:05:56,129 --> 00:05:58,740
together would capturing the glucose

152
00:05:58,740 --> 00:06:00,149
readings from the continuous glucose

153
00:06:00,149 --> 00:06:02,699
monitors effectively gives us all the

154
00:06:02,699 --> 00:06:05,490
raw data right so we can observe blood

155
00:06:05,490 --> 00:06:07,259
glucose levels observe the insulin that

156
00:06:07,259 --> 00:06:10,740
that's been delivered and all the food

157
00:06:10,740 --> 00:06:13,409
that she bet she ate and so that's

158
00:06:13,409 --> 00:06:15,330
that's basically how we gathered the raw

159
00:06:15,330 --> 00:06:17,250
data we do that for you know a few

160
00:06:17,250 --> 00:06:19,979
months before I started you know with

161
00:06:19,979 --> 00:06:23,069
the exercise of modeling and at this

162
00:06:23,069 --> 00:06:25,439
point my daughter's values are almost

163
00:06:25,439 --> 00:06:28,050
normal glycemic meaning that from that

164
00:06:28,050 --> 00:06:30,270
point of view it's almost as if she

165
00:06:30,270 --> 00:06:33,180
doesn't have diabetes and so that's

166
00:06:33,180 --> 00:06:35,370
another huge benefit of

167
00:06:35,370 --> 00:06:37,560
Automation and again this is possible to

168
00:06:37,560 --> 00:06:39,780
achieve you know if you're willing to

169
00:06:39,780 --> 00:06:41,370
you know look at your blood sugar every

170
00:06:41,370 --> 00:06:45,180
five minutes and do a motion asking a

171
00:06:45,180 --> 00:06:47,490
five-year-old girl to have to deal with

172
00:06:47,490 --> 00:06:49,139
that when she's more interested in

173
00:06:49,139 --> 00:06:50,970
correct running around and playing is

174
00:06:50,970 --> 00:06:54,210
doesn't work here so maybe you can tell

175
00:06:54,210 --> 00:06:57,660
me a bit about how you found you know I

176
00:06:57,660 --> 00:06:59,010
decided on tensorflow

177
00:06:59,010 --> 00:07:02,340
and how you used it the vast bleep I

178
00:07:02,340 --> 00:07:04,530
yeah so the reason I decided on on

179
00:07:04,530 --> 00:07:07,110
tensorflow is initially because it was

180
00:07:07,110 --> 00:07:08,460
very easy to sort of switch from

181
00:07:08,460 --> 00:07:09,840
experimentation into production right

182
00:07:09,840 --> 00:07:12,150
and so I would do all the kind of

183
00:07:12,150 --> 00:07:13,949
modeling work and experimentation and

184
00:07:13,949 --> 00:07:15,840
you know it's Jupiter notebooks and all

185
00:07:15,840 --> 00:07:18,979
this stuff is very very convenient and

186
00:07:18,979 --> 00:07:22,260
the controller code is actually written

187
00:07:22,260 --> 00:07:23,940
in go right so all the stuff that deals

188
00:07:23,940 --> 00:07:26,699
with the radio transmission and the time

189
00:07:26,699 --> 00:07:28,289
series databases and all that stuff it's

190
00:07:28,289 --> 00:07:29,010
all written and go

191
00:07:29,010 --> 00:07:31,139
and so with tensorflow I was able to

192
00:07:31,139 --> 00:07:33,330
take the model that had developed in

193
00:07:33,330 --> 00:07:35,729
this Jupiter notebook save it to you

194
00:07:35,729 --> 00:07:37,260
know protocol buffers basically and then

195
00:07:37,260 --> 00:07:40,560
you know load it up and go and that

196
00:07:40,560 --> 00:07:41,520
provides a really nice and clean

197
00:07:41,520 --> 00:07:42,930
interface I almost never have to change

198
00:07:42,930 --> 00:07:45,539
the sort of go code that loads the model

199
00:07:45,539 --> 00:07:47,190
it knows how to feed at the right data

200
00:07:47,190 --> 00:07:48,270
and everything but I can change

201
00:07:48,270 --> 00:07:49,979
completely the behavior of the model

202
00:07:49,979 --> 00:07:51,660
just you know sort of purely in this

203
00:07:51,660 --> 00:07:53,700
high-level way using Python right so

204
00:07:53,700 --> 00:07:57,030
that was one really big appealing thing

205
00:07:57,030 --> 00:07:58,590
for tons of flow the other thing obvious

206
00:07:58,590 --> 00:08:00,180
is that it can run in embedded systems

207
00:08:00,180 --> 00:08:02,250
right and so you know the Raspberry Pi

208
00:08:02,250 --> 00:08:05,039
is an ARM based system and I can run the

209
00:08:05,039 --> 00:08:07,530
the inference and the retraining you

210
00:08:07,530 --> 00:08:09,150
know without having to worry about the

211
00:08:09,150 --> 00:08:10,470
underlying architecture or anything like

212
00:08:10,470 --> 00:08:11,870
that

213
00:08:11,870 --> 00:08:15,720
the third thing I think is I'm very much

214
00:08:15,720 --> 00:08:19,680
using the sort of composability of the

215
00:08:19,680 --> 00:08:21,470
tensor flow compute a computation graphs

216
00:08:21,470 --> 00:08:24,510
so as an example it was very easy to

217
00:08:24,510 --> 00:08:26,699
take the model that predicts blood

218
00:08:26,699 --> 00:08:28,800
glucose and compose it with the model

219
00:08:28,800 --> 00:08:30,960
that is going to recommend an insulin

220
00:08:30,960 --> 00:08:33,029
delivery schedule right and because of

221
00:08:33,029 --> 00:08:35,490
the way the competition graphs works and

222
00:08:35,490 --> 00:08:37,050
the automatic differentiation and

223
00:08:37,050 --> 00:08:40,409
everything you know it's it's very very

224
00:08:40,409 --> 00:08:42,870
easy to you know build the second model

225
00:08:42,870 --> 00:08:44,880
and just let an optimizer how they go at

226
00:08:44,880 --> 00:08:46,800
it and you get the right results right

227
00:08:46,800 --> 00:08:48,329
now without having me having to sit down

228
00:08:48,329 --> 00:08:48,960
do any cow

229
00:08:48,960 --> 00:08:50,070
glass or anything like that which is

230
00:08:50,070 --> 00:08:52,020
very very appealing to me so I said

231
00:08:52,020 --> 00:08:54,900
those are kind of main reasons

232
00:08:54,900 --> 00:08:57,570
yeah and for the listeners we do

233
00:08:57,570 --> 00:09:01,520
actually now have a version of

234
00:09:01,520 --> 00:09:04,890
tensorflow that is built already for the

235
00:09:04,890 --> 00:09:08,010
Raspberry Pi that we run as part of our

236
00:09:08,010 --> 00:09:11,340
nightly builds so I'm hoping as you look

237
00:09:11,340 --> 00:09:14,610
at upgrading tensorflow in the future if

238
00:09:14,610 --> 00:09:17,100
we may be able to help you get up and

239
00:09:17,100 --> 00:09:20,190
running using some pre-built binaries so

240
00:09:20,190 --> 00:09:22,200
that you don't have to build everything

241
00:09:22,200 --> 00:09:24,180
from scratch if that's crew it's awesome

242
00:09:24,180 --> 00:09:26,490
that you're actually able to you know

243
00:09:26,490 --> 00:09:28,740
pull it all together and get it up and

244
00:09:28,740 --> 00:09:30,930
running that's right yeah III think it

245
00:09:30,930 --> 00:09:32,460
speaks to Tesla flow that that was

246
00:09:32,460 --> 00:09:35,240
perhaps the most difficult part of this

247
00:09:35,240 --> 00:09:40,280
and is the is the code available for

248
00:09:40,280 --> 00:09:43,320
what you've actually built yes so some

249
00:09:43,320 --> 00:09:47,820
of it is so for different reasons you

250
00:09:47,820 --> 00:09:50,870
know obviously this is a system that

251
00:09:50,870 --> 00:09:53,580
carries some risk and you know could be

252
00:09:53,580 --> 00:09:55,680
construed as a medical device and things

253
00:09:55,680 --> 00:09:59,130
like that the the model that I use in in

254
00:09:59,130 --> 00:10:01,560
production I have not actually released

255
00:10:01,560 --> 00:10:04,470
publicly but kind of most of the code

256
00:10:04,470 --> 00:10:06,180
around it I have right including the

257
00:10:06,180 --> 00:10:08,250
radio stack for you know all that stuff

258
00:10:08,250 --> 00:10:11,670
however I have made a notebook that kind

259
00:10:11,670 --> 00:10:13,950
of replicates the the general setup also

260
00:10:13,950 --> 00:10:15,990
in terms of flow they're using a much

261
00:10:15,990 --> 00:10:17,930
simpler model but it replicates

262
00:10:17,930 --> 00:10:19,860
precisely what the setup is so you have

263
00:10:19,860 --> 00:10:21,690
a model that predicts blood glucose and

264
00:10:21,690 --> 00:10:23,460
then a second model that composes the

265
00:10:23,460 --> 00:10:26,430
first in order to optimize the delivery

266
00:10:26,430 --> 00:10:28,200
schedule and so that's all open source

267
00:10:28,200 --> 00:10:30,090
is a Jupiter notebook that I published

268
00:10:30,090 --> 00:10:32,430
those basically show and demonstrate how

269
00:10:32,430 --> 00:10:34,260
how this can be done in this in this

270
00:10:34,260 --> 00:10:37,590
manner so obviously this is a very

271
00:10:37,590 --> 00:10:41,640
safety critical system and it poses a

272
00:10:41,640 --> 00:10:44,250
lot of questions and problems you

273
00:10:44,250 --> 00:10:46,230
wouldn't have in other machine learning

274
00:10:46,230 --> 00:10:48,210
systems can you tell us a little bit

275
00:10:48,210 --> 00:10:50,340
about how you thought and planned and

276
00:10:50,340 --> 00:10:52,770
tackled that yeah absolutely so so

277
00:10:52,770 --> 00:10:54,240
there's a few different aspects of that

278
00:10:54,240 --> 00:10:58,080
so one is you know obviously a model can

279
00:10:58,080 --> 00:11:00,600
learn the wrong thing and do something

280
00:11:00,600 --> 00:11:02,670
dangerous and so

281
00:11:02,670 --> 00:11:04,200
you know in order to kind of prevent

282
00:11:04,200 --> 00:11:05,970
that there's all sorts of sort of

283
00:11:05,970 --> 00:11:09,170
secondary safety measures in place that

284
00:11:09,170 --> 00:11:12,150
you know simpler models that perform

285
00:11:12,150 --> 00:11:14,310
safety checks effectively and will sort

286
00:11:14,310 --> 00:11:17,610
of shut off the the main model if it if

287
00:11:17,610 --> 00:11:18,600
it's doing the wrong thing

288
00:11:18,600 --> 00:11:21,210
right so that's sort of one aspect of it

289
00:11:21,210 --> 00:11:23,790
the other thing is that from a sort of

290
00:11:23,790 --> 00:11:27,510
systems perspective it's designed to

291
00:11:27,510 --> 00:11:30,840
limit the you know the the amount of

292
00:11:30,840 --> 00:11:33,390
action that the model can do and so as

293
00:11:33,390 --> 00:11:36,060
an example if her blood group know if if

294
00:11:36,060 --> 00:11:38,370
your blood glucose is very very high and

295
00:11:38,370 --> 00:11:40,560
the model wants to correct it down to

296
00:11:40,560 --> 00:11:43,770
the range that it that is desired so the

297
00:11:43,770 --> 00:11:46,380
set point what it does is instead of

298
00:11:46,380 --> 00:11:48,210
correcting down to that range it

299
00:11:48,210 --> 00:11:50,820
corrects down to some maximum level

300
00:11:50,820 --> 00:11:53,100
beneath what it is - at the moment and

301
00:11:53,100 --> 00:11:56,160
so it's required to basically gradually

302
00:11:56,160 --> 00:11:59,190
correct down so that in case sensitivity

303
00:11:59,190 --> 00:12:01,260
changes very rapidly you don't end up

304
00:12:01,260 --> 00:12:02,610
over delivering it's your effective is

305
00:12:02,610 --> 00:12:05,700
kind of throttling the action of the

306
00:12:05,700 --> 00:12:07,740
system and so there are a few mechanisms

307
00:12:07,740 --> 00:12:11,910
like that and then from a sort of

308
00:12:11,910 --> 00:12:13,440
systems point of view anytime you have

309
00:12:13,440 --> 00:12:16,800
you know data loss or you know even if

310
00:12:16,800 --> 00:12:19,230
the software crashes for example it's

311
00:12:19,230 --> 00:12:21,690
the sign so that it fails in a safe way

312
00:12:21,690 --> 00:12:23,810
so you know shuts off insulin or

313
00:12:23,810 --> 00:12:26,960
delivers only a small very small amount

314
00:12:26,960 --> 00:12:30,030
okay well thanks so much everyone for

315
00:12:30,030 --> 00:12:33,060
joining us on tensorflow meats and thank

316
00:12:33,060 --> 00:12:35,280
you Marius and if you want to see more

317
00:12:35,280 --> 00:12:36,570
like this please hit that subscribe

318
00:12:36,570 --> 00:12:37,430
button

319
00:12:37,430 --> 00:12:40,870
see ya

320
00:12:40,870 --> 00:12:42,210
[Music]

321
00:12:42,210 --> 00:12:43,450
[Applause]

322
00:12:43,450 --> 00:12:45,510
you

